defmodule Neoscan.BlockGasGeneration do
  @moduledoc false

  @doc """
  Blockchain gas generation params
  """
  def generation_amount, do: [8, 7, 6, 5, 4, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
  def generation_length, do: 22
  def decrement_interval, do: 2_000_000

  @doc """
  Calculate the amount of gas generated by a block
  """
  def get_amount_generate_in_block(nil), do: nil


  def get_amount_generate_in_block(index) when index == 0 do
    Enum.at(generation_amount(), 0)
  end
  def get_amount_generate_in_block(index) do
    interval = decrement_interval()
    lenght = generation_length()
    amount = generation_amount()

    if Integer.floor_div(index - 1, interval) > lenght do
      0
    else
      position = Integer.floor_div(index - 1, interval)
      Enum.at(amount, position)
    end
  end
end
